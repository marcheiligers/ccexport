<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %></title>
    <%= include_prism %>
    <style>
        /* Solarized Color Palette */
        :root {
            /* Base colors */
            --base03: #002b36;
            --base02: #073642;
            --base01: #586e75;
            --base00: #657b83;
            --base0: #839496;
            --base1: #93a1a1;
            --base2: #eee8d5;
            --base3: #fdf6e3;
            
            /* Accent colors */
            --yellow: #b58900;
            --orange: #cb4b16;
            --red: #dc322f;
            --magenta: #d33682;
            --violet: #6c71c4;
            --blue: #268bd2;
            --cyan: #2aa198;
            --green: #859900;
        }

        /* Light mode (default) */
        :root {
            --bg-primary: var(--base3);
            --bg-secondary: var(--base2);
            --bg-highlight: var(--base2);
            --text-primary: var(--base00);
            --text-secondary: var(--base01);
            --text-emphasis: var(--base01);
            --border-color: var(--base1);
            --accent-primary: var(--blue);
            --accent-secondary: var(--cyan);
            --code-bg: var(--base2);
            --code-text: var(--base01);
        }

        /* Dark mode */
        @media (prefers-color-scheme: dark) {
            :root {
                --bg-primary: var(--base03);
                --bg-secondary: var(--base02);
                --bg-highlight: var(--base02);
                --text-primary: var(--base0);
                --text-secondary: var(--base1);
                --text-emphasis: var(--base1);
                --border-color: var(--base01);
                --accent-primary: var(--blue);
                --accent-secondary: var(--cyan);
                --code-bg: var(--base02);
                --code-text: var(--base0);
            }
        }

        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', sans-serif;
            line-height: 1.6;
            color: var(--text-primary);
            background-color: var(--bg-primary);
            margin: 0;
            padding: 20px;
            transition: background-color 0.3s ease, color 0.3s ease;
        }

        .conversation-content {
            max-width: 1200px;
            margin: 0 auto;
            background: var(--bg-secondary);
            padding: 32px;
            border-radius: 16px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
            transition: background-color 0.3s ease;
        }

        /* Headers */
        h1 {
            color: var(--accent-primary);
            border-bottom: 2px solid var(--accent-secondary);
            padding-bottom: 12px;
            margin-bottom: 24px;
            border-radius: 0 0 8px 8px;
        }

        h2 {
            color: var(--text-emphasis);
            margin-top: 32px;
            margin-bottom: 16px;
            border-bottom: 1px solid var(--border-color);
        }

        /* Code blocks - integrate with Prism.js */
        pre[class*="language-"], 
        pre:not([class*="language-"]) {
            background: var(--code-bg) !important;
            border-radius: 6px;
            overflow-x: auto;
            margin: 16px;
            padding: 16px;
            border: 1px solid var(--border-color);
        }

        code[class*="language-"],
        pre:not([class*="language-"]) > code {
            color: var(--code-text) !important;
            text-shadow: none !important;
            font-family: 'SF Mono', Monaco, 'Cascadia Code', 'Roboto Mono', monospace;
        }

        /* Inline code (no language class) */
        :not(pre) > code:not([class*="language-"]) {
            background: var(--bg-highlight);
            color: var(--text-emphasis);
            padding: 2px 6px;
            border-radius: 6px;
            font-family: 'SF Mono', Monaco, 'Cascadia Code', 'Roboto Mono', monospace;
            border: 1px solid var(--border-color);
        }

        /* Solarized syntax highlighting colors */
        .token.comment,
        .token.prolog,
        .token.doctype,
        .token.cdata { 
            color: var(--base01) !important; 
            font-style: italic;
        }
        
        .token.punctuation { 
            color: var(--text-primary) !important; 
        }
        
        .token.property,
        .token.tag,
        .token.boolean,
        .token.number,
        .token.constant,
        .token.symbol,
        .token.deleted { 
            color: var(--red) !important; 
        }
        
        .token.selector,
        .token.attr-name,
        .token.string,
        .token.char,
        .token.builtin,
        .token.inserted { 
            color: var(--green) !important; 
        }
        
        .token.operator,
        .token.entity,
        .token.url { 
            color: var(--text-primary) !important; 
        }
        
        .token.atrule,
        .token.attr-value,
        .token.keyword { 
            color: var(--blue) !important; 
        }
        
        .token.function,
        .token.class-name { 
            color: var(--yellow) !important; 
        }
        
        .token.regex,
        .token.important,
        .token.variable { 
            color: var(--orange) !important; 
        }

        /* Additional syntax highlighting */
        .token.namespace { 
            color: var(--magenta) !important; 
        }

        .token.important,
        .token.bold { 
            font-weight: bold; 
        }

        .token.italic { 
            font-style: italic; 
        }

        /* Blockquotes (thinking content) */
        blockquote {
            border-left: 4px solid var(--accent-secondary);
            margin: 16px 0;
            padding: 12px 20px;
            background: var(--bg-highlight);
            border-radius: 0 12px 12px 0;
            font-style: italic;
            color: var(--text-secondary);
        }

        /* Details/Summary (collapsible sections) */
        details {
            margin: 20px 16px;
            border: 1px solid var(--border-color);
            border-radius: 6px;
            overflow: hidden;
            background: var(--bg-primary);
        }

        summary {
            background: var(--bg-highlight);
            color: var(--text-emphasis);
            padding: 12px 16px;
            cursor: pointer;
            font-weight: 600;
            border-radius: 6px 6px 0 0;
            transition: background-color 0.2s ease;
        }

        summary:hover {
            background: var(--accent-primary);
            color: var(--bg-primary);
        }

        details[open] summary {
            border-radius: 6px 6px 0 0;
        }

        details > *:not(summary) {
            padding: 16px;
            margin: 0;
        }

        details > pre {
            margin: 0;
            border-radius: 0;
        }

        /* Tables */
        table {
            border-collapse: collapse;
            width: 100%;
            margin: 16px 0;
            border-radius: 12px;
            overflow: hidden;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
        }

        th, td {
            padding: 12px 16px;
            text-align: left;
            border-bottom: 1px solid var(--border-color);
        }

        th {
            background: var(--accent-primary);
            color: var(--bg-primary);
            font-weight: 600;
        }

        tr:nth-child(even) {
            background: var(--bg-highlight);
        }

        /* Links */
        a {
            color: var(--accent-primary);
            text-decoration: none;
            border-bottom: 1px solid var(--accent-secondary);
            transition: border-color 0.2s ease;
        }

        a:hover {
            border-bottom-color: var(--accent-primary);
        }

        /* Horizontal rules */
        hr {
            border: none;
            height: 2px;
            background: linear-gradient(to right, var(--accent-secondary), var(--accent-primary), var(--accent-secondary));
            margin: 32px 0;
            border-radius: 2px;
        }

        /* Lists */
        ul, ol {
            padding-left: 24px;
        }

        li {
            margin: 8px 0;
        }

        /* Strong/Bold text */
        strong, b {
            color: var(--text-emphasis);
            font-weight: 600;
        }

        p {
            overflow: scroll;
        }

        /* Session metadata styling */
        p strong {
            color: var(--accent-primary);
        }

        /* Smooth transitions for theme switching */
        * {
            transition: background-color 0.3s ease, color 0.3s ease, border-color 0.3s ease;
        }

        /* Theme toggle button */
        .theme-toggle {
            position: fixed;
            top: 10px;
            right: 10px;
            padding: 8px 12px;
            font-size: 12px;
            background: var(--bg-highlight);
            color: var(--text-secondary);
            border: 1px solid var(--border-color);
            border-radius: 6px;
            cursor: pointer;
            z-index: 1000;
            transition: all 0.2s ease;
            user-select: none;
        }

        .theme-toggle:hover {
            background: var(--accent-primary);
            color: var(--bg-primary);
            transform: scale(1.05);
        }

        .theme-toggle:active {
            transform: scale(0.95);
        }

        /* Manual theme overrides */
        [data-theme="light"] {
            --bg-primary: var(--base3);
            --bg-secondary: var(--base2);
            --bg-highlight: var(--base2);
            --text-primary: var(--base00);
            --text-secondary: var(--base01);
            --text-emphasis: var(--base01);
            --border-color: var(--base1);
            --accent-primary: var(--blue);
            --accent-secondary: var(--cyan);
            --code-bg: var(--base2);
            --code-text: var(--base01);
        }

        [data-theme="dark"] {
            --bg-primary: var(--base03);
            --bg-secondary: var(--base02);
            --bg-highlight: var(--base02);
            --text-primary: var(--base0);
            --text-secondary: var(--base1);
            --text-emphasis: var(--base1);
            --border-color: var(--base01);
            --accent-primary: var(--blue);
            --accent-secondary: var(--cyan);
            --code-bg: var(--base02);
            --code-text: var(--base0);
        }
    </style>
</head>
<body>
    <button class="theme-toggle" id="theme-toggle">
        <span id="theme-icon">☀️</span>
        <span id="theme-text">Light Mode</span>
    </button>
    
    <main class="conversation-content">
        <%= content %>
    </main>

    <script>
        (function() {
            'use strict';
            
            const themeToggle = document.getElementById('theme-toggle');
            const themeIcon = document.getElementById('theme-icon');
            const themeText = document.getElementById('theme-text');
            
            // Get stored theme preference or default to system preference
            function getInitialTheme() {
                const stored = localStorage.getItem('solarized-theme');
                if (stored) {
                    return stored;
                }
                
                // Check system preference
                if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {
                    return 'dark';
                }
                
                return 'light';
            }
            
            // Update UI elements based on current theme
            function updateThemeUI(theme) {
                if (theme === 'dark') {
                    themeIcon.textContent = '🌙';
                    themeText.textContent = 'Dark Mode';
                    document.documentElement.setAttribute('data-theme', 'dark');
                } else {
                    themeIcon.textContent = '☀️';
                    themeText.textContent = 'Light Mode';
                    document.documentElement.setAttribute('data-theme', 'light');
                }
            }
            
            // Toggle theme
            function toggleTheme() {
                const currentTheme = document.documentElement.getAttribute('data-theme') || getInitialTheme();
                const newTheme = currentTheme === 'dark' ? 'light' : 'dark';
                
                updateThemeUI(newTheme);
                localStorage.setItem('solarized-theme', newTheme);
            }
            
            // Initialize theme
            const initialTheme = getInitialTheme();
            updateThemeUI(initialTheme);
            
            // Add click event listener
            themeToggle.addEventListener('click', toggleTheme);
            
            // Listen for system theme changes (but only if user hasn't manually set a preference)
            if (window.matchMedia) {
                const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');
                mediaQuery.addListener(function(e) {
                    // Only auto-switch if user hasn't manually set a preference
                    if (!localStorage.getItem('solarized-theme')) {
                        updateThemeUI(e.matches ? 'dark' : 'light');
                    }
                });
            }
            
            // Add keyboard support (Space or Enter to toggle)
            themeToggle.addEventListener('keydown', function(e) {
                if (e.key === ' ' || e.key === 'Enter') {
                    e.preventDefault();
                    toggleTheme();
                }
            });
            
            // Make button focusable for accessibility
            themeToggle.setAttribute('tabindex', '0');
            themeToggle.setAttribute('aria-label', 'Toggle between light and dark theme');
            themeToggle.setAttribute('role', 'button');
        })();
    </script>
</body>
</html>