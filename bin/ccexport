#!/usr/bin/env ruby

require_relative '../lib/claude_conversation_exporter'
require 'optparse'
require 'time'

options = {}

OptionParser.new do |parser|
  parser.banner = "Usage: ccexport [options]"
  
  parser.on("--from DATE", "Filter messages from this date (YYYY-MM-DD)") do |date|
    options[:from] = date
  end
  
  parser.on("--to DATE", "Filter messages to this date (YYYY-MM-DD)") do |date|
    options[:to] = date
  end
  
  parser.on("--today", "Filter messages from today only") do
    options[:today] = true
  end
  
  parser.on("--in PATH", "Project path to export conversations from (default: current directory)") do |path|
    options[:in] = path
  end
  
  parser.on("--out PATH", "Output directory or file path (default: claude-conversations)") do |path|
    options[:out] = path
  end
  
  parser.on("--timestamps", "Show timestamps with each message") do
    options[:timestamps] = true
  end
  
  parser.on("--preview", "Generate HTML preview and open in browser") do
    options[:preview] = true
  end
  
  parser.on("--no-open", "Generate HTML preview without opening in browser (requires --preview)") do
    options[:no_open] = true
  end
  
  parser.on("-h", "--help", "Show this help message") do
    puts parser
    exit
  end
end.parse!

begin
  # Validate options
  if options[:no_open] && !options[:preview]
    puts "Error: --no-open requires --preview"
    exit 1
  end
  
  project_path = options[:in] || Dir.pwd
  output_dir = options[:out] || 'claude-conversations'
  result = ClaudeConversationExporter.export(project_path, output_dir, options)
  
  # Generate preview if requested
  if options[:preview]
    # Use the actual output file if it was specified, otherwise use the directory
    preview_target = result[:output_file] || output_dir
    ClaudeConversationExporter.generate_preview(preview_target, !options[:no_open], result[:leaf_summaries] || [])
  end
  
  exit 0
rescue StandardError => e
  puts "Error: #{e.message}"
  exit 1
end